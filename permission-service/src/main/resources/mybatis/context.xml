<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd 
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- MyBatis文件配置，扫描所有Mapper文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource" />
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
        <property name="configLocation" value="classpath:config.xml" />
    </bean>

    <!-- Spring与MyBatis整合，扫描所有Mapper接口，查找类路径下的映射器并自动将它们创建成MapperFactoryBean，然后创建各自接口的动态代理类 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.omniprimeinc.commonservice.permission.services.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
    </bean>

    <bean id="statfilter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="mergeSql" value="true" />
        <property name="logSlowSql" value="true" />
        <property name="slowSqlMillis" value="${druid.stat.slow.sql.millis:1000}" />
    </bean>

    <!-- 数据源配置, 使用Alibaba Druid数据库连接池 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" autowire="byName">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <!-- 基本属性url、user、password -->
        <property name="driverClassName" value="${database.driverClassName}" />
        <property name="url" value="${database.url}" />
        <property name="username" value="${database.username}" />
        <property name="password" value="${database.password}" />

        <!-- 过滤器代理 -->
        <property name="proxyFilters">
            <list>
                <ref bean="logFilter" />
                <ref bean="statfilter" />
            </list>
        </property>

        <!-- 初始化最大的连接数量 -->
        <property name="initialSize" value="${pool.init}" />

        <!-- 最小的空闲数量 -->
        <property name="minIdle" value="${pool.min}" />

        <!-- 最大的活跃的数量 -->
        <property name="maxActive" value="${pool.max}" />

        <!-- 获取连接最大等待时间，单位是毫秒 -->
        <property name="maxWait" value="${pool.max.wait}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${pool.time.between.eviction.runs.millis}" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${pool.min.evictable.idle.time.millis}" />

        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned" value="true" />

        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout" value="${pool.remove.abandoned.timeout}" />

        <!-- 回收连接的同时会打印日志 -->
        <property name="logAbandoned" value="false" />

        <!-- 测试连接，单位是毫秒 -->
        <property name="validationQueryTimeout" value="300000" />

        <property name="validationQuery" value="SELECT sysdate from dual" />

        <property name="testWhileIdle" value="true" />

        <property name="testOnBorrow" value="false" />

        <property name="testOnReturn" value="false" />
    </bean>
</beans>